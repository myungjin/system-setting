#+TITLE: Arch Linux installation and configuration guildeline
#+AUTHOR: Myungjin Lee
#+EMAIL: myungjin.lee@gmail.com
#+PROPERTY: header-args:shell

* Pre-requisites
An arch linux image needs to be downloaded. The downloaded image  needs to be burned into a bootable medium (e.g., usb stick).

* Installation
** Wireless Interface setting
This step is for configuring wireless interface so that necessary packages can be downloaded and installed from Arch Linux package repository.

#+begin_src shell

  iwctl
  [iwd]# station wlan0 connect *SSID*
  [iwd]# station wlan0 show
  [iwd]# exit

  ping archlinux.org
#+end_src

** Date and time setting
#+begin_src shell

  timedatectl set-ntp true

#+end_src

** Filesystem configuration
The following filesystem configuration is a reference, which is simple and sufficient for most desktop users:
- partition 1 is for EFI system partition: Code should be specified as  =EF00= and  size is =1GB=.
- partition 2 is for Linux swap: Code is =8200= and size is =10GB=
- partition 3 is for Linux x86-64 root (/): Code is =8304= and allocate 200GB
- partition 4 is for Linux home (/home): Code is =8302= and allocate remaining disk space for this partition

#+begin_src shell

  fdisk -l

  gdisk /dev/nvme0n1

#+end_src

After disk is partitioned via gdisk, run the following to format disk partitions.

#+begin_src shell

  mkfs.ext4 /dev/nvme0n1p3
  mkfs.fat -F32 /dev/nvme0n1p1
  mkswap /dev/nvme0n1p2

  mount /dev/nvme0n1p3 /mnt
  mount --mkdir /dev/nvme0n1p1 /mnt/boot
  mount --mkdir /dev/nvme0n1p4 /mnt/home
  swapon /dev/nvme0n1p2

#+end_src

A number of  packages need to be installed during linux installation via pacstrap:
- linux
- linux-firmware
- wpa_supplicant
- dhcpcd
- emacs
- nano
- grub
- efibootmgr
- sudo
- amd-ucode

#+begin_src shell

  pacstrap /mnt base linux linux-firmware wpa_supplicant dhcpcd emacs nano grub efibootmgr glibc-locales amd-ucode

  genfstab -U /mnt >> /mnt/etc/fstab

  arch-chroot /mnt

  ln -sf /usr/share/zoneinfo/US/Pacific /etc/localtime

  hwclock --systohc

  # Edit /etc/locale.gen and uncomment en_US.UTF-8 UTF-8 and ko_KR.UTF-8 UTF-8.
  nano /etc/locale.gen
  locale-gen

  echo LANG=en_US.UTF-8 > /etc/locale.conf

  echo "KEYMAP=emacs" > /etc/vconsole.conf

  echo olympus > /etc/hostname

  echo "127.0.0.1	localhost" >> /etc/hosts
  echo "::1		localhost" >> /etc/hosts
  echo "127.0.1.1	olympus.localdomain	olympus" >> /etc/hosts

  passwd

  mkdir /boot/EFI
  grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB

  # modify /etc/default/grub
  nano /etc/default/grub
  # add resume=/dev/nvme0n1p2 in GRUB_CMDLINE_LINUX_DEFAULT; here /dev/nvme0n1p2 should be swap partition
  # Note resume=/dev/nvme0n1p2 is to enable hibernate

  # Then, run the following to create grub.cfg
  grub-mkconfig -o /boot/grub/grub.cfg

  exit

  umount -R /mnt

  # Remove installation media (e.g., usb)
  reboot

#+end_src

* Post-installation configuration

To start post-installation configuration, log into the system as root.

** Add user
#+begin_src shell
  # Replace <id>  with a user account
  useradd -m <id>
  echo "<id> ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/<id>
  passwd <id>
#+end_src

From now on, do the following configurations within a user account. =sudo= may be needed.

** permanent wireless interface setup

#+begin_src shell
  ip link

  wpa_passphrase *SSID* *passprhase* > /etc/wpa_supplicant/wpa_supplicant-wlp2s0.conf
  # remove plain passphrase in the config file
  nano /etc/wpa_supplicant/wpa_supplicant-wlp2s0.conf

  ln -s /usr/share/dhcpcd/hooks/10-wpa_supplicant /usr/lib/dhcpcd/dhcpcd-hooks/

  systemctl enable wpa_supplicant@wlp2s0
  systemctl start wpa_supplicant@wlp2s0

  systemctl enable dhcpcd@wlp2s0
  systemctl start dhcpcd@wlp2s0

#+end_src

** Basic development setting
#+begin_src shell
  sudo pacman -S man man-pages
  sudo pacman -S --needed base-devel git rust
#+end_src

** Install fan control tool for Lian Li fan
#+begin_src shell
  git clone git@github.com:EightB1ts/uni-sync.git
  cd uni-sync
  ./install.sh
#+end_src
The configuration file will be =/usr/sbin/uni-sync.json=. Edit speed between 1-100 (%).
And restart the service: =sudo systemctl restart uni-sync=.

** yay: AUR package manager

#+begin_src shell
  # install yay from AUR so that AUR packages can be managed by using yay
  mkdir -p aur
  pushd aur
  git clone https://aur.archlinux.org/yay.git
  pushd yay
  makepkg -si
  popd
  popd
#+end_src

** AMD GPU
  # run the following to identify the graphic card
  lspci -v | grep -A1 -e VGA -e 3D

  # run the following to get a complete list of open-source video drivers
  pacman -Ss xf86-video

  # Since the installed CPU is amd 4750g, install xf86-video-amdgpu
  pacman -S xf86-video-amdgpu

  # modify /etc/mkinitcpio.conf
  # add amdgpu in MODULES array
  # add resume hook in HOOKS array; right before fsck hook

** NVIDIA 4070 TI GPU
1. lspci -k | grep -A 2 -E "(VGA|3D)"
   
2. pacman -S nvidia

3. Remove =kms= from the HOOKS array in /etc/mkinitcpio.conf and [[https://wiki.archlinux.org/title/Regenerate_the_initramfs][regenerate the initramfs]]. This will prevent the initramfs from containing the nouveau module making sure the kernel cannot load it during early boot.
   sudo nano /etc/mkinitcpio.conf
   
4. To regenerate the initramfs,
   sudo mkinitcpio -p linux

5. reboot

# This step is necessary only for xorg.
6. (only for xorg, not for wayland) sudo nvidia-xconfig

** GNOME and wayland
1. =sudo pacman -S gnome gnome-tweaks=

2. =sudo systemctl enable gdm=

3. To swap ctrl key and caps key globally in gnome DE, 
    =gsettings set org.gnome.desktop.input-sources xkb-options '["ctrl:swapcaps"]'=

4. =reboot=

** x-window and lightDM

#+begin_src shell

  pacman -S xorg-server xorg-server-xephyr
  pacman -S lightdm lightdm-webkit2-greeter lightdm-webkit-theme-litarvan

  # do not install gdm since lightdm is the dm that is going to be used
  pacman -S gnome gnome-tweaks

  # edit /etc/lightdm/lightdm.conf and set lightdm-webkit2-greeter as greeter
  # edit /etc/lightdm/lightdm-webkit2-greeter.conf and set theme or webkit-theme to litarvan

  # This is to swap ctrl key and caps key globally in gnome DE
  gsettings set org.gnome.desktop.input-sources xkb-options '["ctrl:swapcaps"]'

  # Run the following to test lightdm before enabling it via systemd
  lightdm --test-mode --debug

  systemctl enable lightdm

  # reboot the system to run display manager
  reboot

#+end_src

** Bluetooth
#+begin_src shell
  # enable/start bluetooth
  systemctl enable bluetooth
  systemctl start bluetooth
#+end_src

* Useful packages
#+begin_src shell
  # tilda: a drop-down terminal emulator in X
  # lsb_release: print LSB (Linux Standard Base) and Distribution information
  # firefox: web browser
  # tk: somehow needed to install python3 successfully under pyenv
  sudo pacman -S -y tilda lsb-release firefox tk

  # install google chrome (web broswer)
  yay -S -y google-chrome

  # install numix-circle icon theme from AUR; change the icon theme from gnome tweaks
  yay -S numix-icon-theme-git

  # then, install numix-circle-icon-theme-git
  yay -S numix-circle-icon-theme-git
#+end_src

* Korean Language Environment
1. You should have =ko_KR.UTF-8= enabled in =/etc/locale.gen=.
   
2. Install Korean font so that  korean letters are properly displayed (e.g., on a web broswer): =sudo pacman -S noto-fonts-cjk=.

3. Install input method: =sudo pacman -S fcitx5-hangul fcitx5-im=.

4. run =fcitx5-configtool=.
   (a) Select Add Input Method -> Deselect "Show Only Current Language" and add Hangul.
   (b) (Optional) Select Global Options. At Trigger Input Method, change =Ctrl+Space= to =Alt+Space=.
          In case of Gnome, we should disable activate-window-menu key binding.
          =gsettings set org.gnome.desktop.wm.keybindings activate-window-menu []=
          To restore default, =gsettings reset org.gnome.desktop.wm.keybindings activate-window-menu=
          To see the current setting, =gsettings list-recursively | grep activate-window-menu=

5. add the following to =/etc/environment= for Fcitx5 to work across almost all apps:
#+begin_src
GTK_IM_MODULE=fcitx
QT_IM_MODULE=fcitx
XMODIFIERS=@im=fcitx
#+end_src
6. To see if Fcitx5 is working correctly, open an application and press, =Ctrl+Space= (or =Alt+Space=) to switch between input methods.

* Making MAC OS look and feel
1. sudo pacman -S gnome-shell-extensions

2. yay -S gnome-shell-extension-dash-to-dock gnome-shell-extension-freon

3. Download icons from https://gnome-look.org (e.g., https://www.gnome-look.org/p/1400021).
   
4. Unzip the file: e.g., =tar -xf  Mkos-Big-Sur.tar.xz=.

5. Place Icons to =/usr/share/icons= (as root) or =${HOME}/.local/share/icons= (as user); create icons folder if not exists.

6. Run =gnome-tweaks=. Go to Appearance->Icons and select icons you want.
   
7. Restore minimize,maximize,close icons on application:
     =gsettings set org.gnome.desktop.wm.preferences button-layout "appmenu:minimize,maximize,close"=

8. To customize GDM, install =gdm-settings=: =yay -S gdm-settings=.  Note: this needs python in the system. If pyenv is in use, run =pyenv shell system=.

9. Select GDM settings from Gnome application UI. Go to Appearance->Background. Choose "Image" as Type and select a background image
   you want. Litarvan background image can be downloaded from https://github.com/Litarvan/lightdm-webkit-theme-litarvan/blob/master/src/assets/images/background.png?raw=true.

* ETC
** Bluetooth headset
Bluetooth and headset can be set up in gnome desktop environment.
Once gnome is set up, connect bluetooth headset via gnome desktop interface.
Once the headset is connected to the system, launch `Settings' application.
Choose `Sound', and choose the headset in `Output Deivce' and a configuration relevant to the headset in `Configuration'
